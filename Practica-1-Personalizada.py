# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MH2y8tadKVKfBL9zCKGff1GRNXOXdulM
"""

import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt

# Datos de entrada y salida para la conversión de gramos a kilogramos
gramos = np.array([1000, 500, 2000, 1500, 300], dtype=float)
kilogramos = np.array([1, 0.5, 2, 1.5, 0.3], dtype=float)

# Definir el modelo
capa = tf.keras.layers.Dense(units=1, input_shape=[1])
modelo = tf.keras.Sequential([capa])

# Compilar el modelo
modelo.compile(
    optimizer=tf.keras.optimizers.Adam(0.1),
    loss='mean_squared_error'
)

# Entrenar el modelo
print("Comenzando entrenamiento...")
historial = modelo.fit(gramos, kilogramos, epochs=1000, verbose=False)
print("Modelo entrenado!")

# Graficar la pérdida
plt.figure(figsize=(12, 6))

plt.subplot(1, 2, 1)
plt.xlabel("# Época")
plt.ylabel("Magnitud de pérdida")
plt.plot(historial.history["loss"])
plt.title("Conversión de Gramos a Kilogramos - Pérdida durante el entrenamiento")

# Realizar una predicción
print("Realizar una predicción")
resultado = modelo.predict([500])
print("El resultado es " + str(resultado) + " kg")

# Guardar el modelo
modelo.save('gramos_a_kilogramos.h5')

# Convertir el modelo a formato TensorFlow.js
!tensorflowjs_converter --input_format keras gramos_a_kilogramos.h5 Peso

# Mostrar el contenido del directorio
!ls Peso