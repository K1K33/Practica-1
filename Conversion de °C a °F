import tensorflow as tf
import numpy as np
celcius = np.array([-15,-5,0,5,15], dtype=float)
fahrenheit = np.array([5,23,32,41,59], dtype=float)
#capa = tf.keras.layers.Dense(units=1, input_shape=[1])
#modelo = tf.keras.Sequential([capa])
oculta1 = tf.keras.layers.Dense(units=3, input_shape=[1])
oculta2 = tf.keras.layers.Dense(units=3)
salida = tf.keras.layers.Dense(units=1)
modelo = tf.keras.Sequential([oculta1, oculta2, salida])
modelo.compile(
optimizer=tf.keras.optimizers.Adam(0.1),
loss='mean_squared_error'
)
print("comenzando entrenamiento...")
hilstorial=modelo.fit(celcius, fahrenheit, epochs=1000, verbose=False)
print ("modelo entrenado!!!")
import matplotlib.pyplot as plt
plt.xlabel("# Epoca")
plt.ylabel("magnitud de perdida")
plt.plot(hilstorial.history["loss"])
print ("realizar una prediccion")
resultado = modelo.predict ([100.0])
print("El resultado es " + str(resultado) + "Â°F")
